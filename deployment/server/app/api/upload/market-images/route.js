"use strict";(()=>{var e={};e.id=7261,e.ids=[7261],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57147:e=>{e.exports=require("fs")},73292:e=>{e.exports=require("fs/promises")},71017:e=>{e.exports=require("path")},21810:(e,r,o)=>{o.r(r),o.d(r,{headerHooks:()=>F,originalPathname:()=>S,patchFetch:()=>Z,requestAsyncStorage:()=>k,routeModule:()=>v,serverHooks:()=>x,staticGenerationAsyncStorage:()=>j,staticGenerationBailout:()=>P});var t={};o.r(t),o.d(t,{POST:()=>w,PUT:()=>$,dynamic:()=>p,fetchCache:()=>f,maxDuration:()=>m});var a=o(95419),s=o(69108),i=o(99678),l=o(78070),n=o(73292),c=o(71017),u=o.n(c),d=o(57147),g=o.n(d);let p="force-dynamic",m=60,f="force-no-store";async function y(){let e=u().join(process.cwd(),"public","market-img");try{return g().existsSync(e)||(await (0,n.mkdir)(e,{recursive:!0}),console.log("Created upload directory:",e)),e}catch(e){throw console.error("Failed to create upload directory:",e),Error("Failed to access or create upload directory")}}function h(e){let r=Date.now(),o=Math.random().toString(36).substring(2,8),t=e.name.replace(/\s+/g,"-").toLowerCase();return`${r}-${o}-${t}`}async function w(e){try{console.log("POST /api/upload/market-images - Uploading new image");let r=(await e.formData()).get("file");if(!r)return console.error("No file found in form data"),l.Z.json({success:!1,error:"No file uploaded"},{status:400});if(!r.type.startsWith("image/"))return console.error(`Invalid file type: ${r.type}`),l.Z.json({success:!1,error:"File must be an image"},{status:400});console.log(`Processing file: ${r.name}, size: ${r.size}, type: ${r.type}`);let o=await y(),t=h(r);console.log("Converting file to buffer");let a=await r.arrayBuffer(),s=Buffer.from(a);console.log(`Buffer created, size: ${s.length}`);let i=u().join(o,t);console.log(`Saving file to: ${i}`);try{await (0,n.writeFile)(i,s),console.log("File saved successfully")}catch(e){return console.error("Error writing file:",e),l.Z.json({success:!1,error:`Failed to write file: ${e.message}`},{status:500})}let c=`/market-img/${t}`;return console.log(`File saved, returning URL: ${c}`),l.Z.json({success:!0,fileUrl:c,message:"Image uploaded successfully"},{headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}})}catch(e){return console.error("Error processing upload:",e),l.Z.json({success:!1,error:"Failed to upload file",details:e.message||String(e)},{status:500})}}async function $(e){try{console.log("PUT /api/upload/market-images - Updating existing image");let r=await e.formData(),o=r.get("file"),t=r.get("oldImageUrl");if(console.log(`Old image URL: ${t||"none provided"}`),!o)return console.error("No file found in form data"),l.Z.json({success:!1,error:"No file uploaded"},{status:400});if(!o.type.startsWith("image/"))return console.error(`Invalid file type: ${o.type}`),l.Z.json({success:!1,error:"File must be an image"},{status:400});console.log(`Processing file: ${o.name}, size: ${o.size}, type: ${o.type}`);let a=await y(),s=h(o),i=await o.arrayBuffer(),c=Buffer.from(i),d=u().join(a,s);console.log(`Saving new file to: ${d}`);try{await (0,n.writeFile)(d,c),console.log("New file saved successfully")}catch(e){return console.error("Error writing file:",e),l.Z.json({success:!1,error:`Failed to write file: ${e.message}`},{status:500})}let p=!1;if(t&&"string"==typeof t&&t.startsWith("/market-img/")&&!t.includes("default")&&!t.includes("placeholder"))try{let e=t.split("?")[0],r=u().join(process.cwd(),"public",e.replace(/^\//,""));console.log(`Attempting to delete old file: ${r}`),g().existsSync(r)?(await (0,n.unlink)(r),console.log(`Deleted old image: ${r}`),p=!0):console.log(`Old file does not exist: ${r}`)}catch(e){console.error("Failed to delete old image:",e)}let m=`/market-img/${s}`;return console.log(`File saved, returning URL: ${m}`),l.Z.json({success:!0,fileUrl:m,oldFileDeleted:p,message:"Image updated successfully"},{headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}})}catch(e){return console.error("Error processing image update:",e),l.Z.json({success:!1,error:"Failed to update image",details:e.message||String(e)},{status:500})}}let v=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/upload/market-images/route",pathname:"/api/upload/market-images",filename:"route",bundlePath:"app/api/upload/market-images/route"},resolvedPagePath:"E:\\copycoder-2025-04-13T00-58-05-829Z\\src\\app\\api\\upload\\market-images\\route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:k,staticGenerationAsyncStorage:j,serverHooks:x,headerHooks:F,staticGenerationBailout:P}=v,S="/api/upload/market-images/route";function Z(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:j})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[1638,6206],()=>o(21810));module.exports=t})();